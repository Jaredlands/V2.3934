[gcode_macro inconsistent_test]
description: print a pattern in vase mode to identify extrusion inconsistency
gcode:
    {% set width = params.WIDTH|default(15)|float %}
    {% set length = params.LENGTH|default(40)|float %}
    {% set print_speed = params.SPEED|default(15) * 60 %}
    {% set fan_speed = params.FAN_SPEED|default(60) * 2.55 %}
    {% set z_step = params.LAYER_HEIGHT|default(0.3) %}
    {% set line_width = params.LINE_WIDTH|default(0.65) %}
    {% set filament_dia = params.FILAMENT_DIA|default(1.75)|float %}
    
    {% set raft_inc = 1.410*line_width %}
    {% set raft_e = 0.08 %}
    {% set tower_e = line_width*z_step/(3.1416 * (filament_dia/2)**2 ) %}
    {% set r_width= width+5 %}
    {% set step_by_mm = (z_step / 2 ) / (width + length) %}

    {% if printer.extruder.can_extrude %}

        G90
     # Go to start point
        G1 X150 Y150 F{printer['gcode_macro _User_Variables'].travel_speed * 60}
        G1 Z0.2 F{printer['gcode_macro _User_Variables'].z_drop_speed * 60}
        G91
        G1 F{print_speed}
        G1 Y-2.5 Y-2.5
        {% for i in range(0,(r_width/(raft_inc))|int,2) %}
           
            G1 X{raft_inc} E{raft_inc * raft_e}
            G1 X-{(i+1) * raft_inc} Y{(i+1) * raft_inc} E{ raft_e * 1.41 * (i+1) * raft_inc}
            G1 Y{raft_inc} E{raft_inc * raft_e}
            G1 X{(i+2) * raft_inc} Y-{(i+2) * raft_inc} E{ raft_e * 1.41 * (i+2) * raft_inc}
        {% endfor %}
        {% for i in range(1,((length-width)/(raft_inc))|int,2) %}
            
            G1 X{raft_inc} E{raft_inc * raft_e}
            G1 X-{r_width} Y{r_width} E{raft_e * 1.41  * r_width}
            G1 X{raft_inc} E{raft_inc * raft_e}
            G1 X{r_width} Y-{r_width} E{raft_e * 1.41  * r_width}
        {% endfor %}
        {% for i in range(0,(r_width/(raft_inc))|int-1,2) %}
        
            G1 Y{raft_inc} E{raft_inc * raft_e}
            G1 X-{r_width - (i+1) * raft_inc} Y{r_width - (i+1) * raft_inc} E{raft_e * 1.41  * (r_width - (i+1) * raft_inc)}
            G1 X{raft_inc} E{raft_inc * raft_e}
            G1 X{r_width - (i+2) * raft_inc} Y-{r_width - (i+2) * raft_inc} E{raft_e * 1.41  * (r_width - (i+2) * raft_inc)}
        {% endfor %}
        G10
        G1 Z0.2

        G90
        G1 X150 Y150 F{printer['gcode_macro _User_Variables'].travel_speed * 60}
        M106 S{fan_speed}
        G91
        
    # first layer (0.1 to 0.3mm)
        G1 F{print_speed}
        {% for l in range(1,length|int+1) %}
            G1 X1 Z{step_by_mm} E{0.05 + step_by_mm*l*0.5}
        {% endfor %}
        {% for l in range(1,width|int+1) %}
            G1 Y1 Z{step_by_mm} E{0.05 + step_by_mm*(l+length)*0.5}
        {% endfor %}
        {% for l in range(1,length|int+1) %}
            G1 X-1 Z{step_by_mm} E{0.05 + step_by_mm*(l+length+width)*0.5}
        {% endfor %}
        {% for l in range(1,width|int+1) %}
            G1 Y-1 Z{step_by_mm} E{0.05 + step_by_mm*(l+length+length+width)*0.5}
        {% endfor %}
        
        {% for h in range((40/0.2)|int) %}
            {% set length = length - (z_step/4)*h %}
            {% set step_by_mm = (z_step/2) / (width + length) %}
    _RESPOND MSG="{step_by_mm * (length) }"
    _RESPOND MSG="{step_by_mm * ( width ) }"
            G1 X{length} Z{step_by_mm*length} E{length*tower_e}
            G1 Y{width} Z{step_by_mm*width} E{width*tower_e}
    _RESPOND MSG="{step_by_mm * (length) }"
            G1 X-{length} Z{step_by_mm*length} E{length*tower_e}
    _RESPOND MSG="{step_by_mm * (width) }"
            G1 Y-{width} Z{step_by_mm*width} E{width*tower_e}
    _RESPOND MSG="{step_by_mm * (length+ length + width + width) }"
            
        {% endfor %}
    

        G1 Z2

        



    {% endif %}