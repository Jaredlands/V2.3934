[gcode_macro CALIBRATE]
description: Calibrate the printer flow or pressure advance
gcode:
    # Type of calibration
    {% set _fil = printer['gcode_macro _FILAMENT'].filament %}
    {% set TYPE = params.TYPE | default("") | string | lower %}
    {% set nozzle_dia = printer.configfile.settings[printer.toolhead.extruder].nozzle_diameter %}

    {% if TYPE=="flow" %}
        # Call the standard START_PRINT with no chamber temp requirement (we want to go fast!)
        # Also no bed mesh needed for this one as it's a small center print
        PRINT_START CHAMBER_MIN_TEMP=0 SIZE=130_130_170_170
        FLOW_MULTIPLIER_CALIBRATION EXTRUSION_WIDTH={nozzle_dia * 1.1775} LAYER_HEIGHT={nozzle_dia/2} HEIGHT=15 SIZE=35 CONTROL_SPEED=60 EXTRUSION_MULTIPLIER={_fil.extrude_factor} FAN_SPEED={_fil.fan_speed} DO_RAFT=0 MIN_LAYER_DURATION=0
        PRINT_END FILTER_TIME=0

    {% elif TYPE=="pressure_advance" %}
        # Call the standard START_PRINT with almost no chamber temp requirement (we want to go fast!)
        # A bed mesh is needed for this one as it's a large print (120mm sized square)
        PRINT_START CHAMBER_MIN_TEMP=0 SIZE=90_90_210_210
        PRESSURE_ADVANCE_CALIBRATION PURGE_MM=2 START=0.016 INCREMENT=0.002
        PRINT_END FILTER_TIME=0
    
    {% elif TYPE=="inconsistent_test" %}
        PRINT_START CHAMBER_MIN_TEMP=0 SIZE=140_140_200_170
        INCONSISTENT_TEST FAN_SPEED={_fil.fan_speed} 
        PRINT_END FILTER_TIME=0
    
    {% elif TYPE=="max_flow" %}
        # Call the standard START_PRINT with almost no chamber temp requirement (we want to go fast!)
        PRINT_START CHAMBER_MIN_TEMP=0 SIZE=115_115_185_185
        MAX_FLOW_CALIBRATION EXTRUSION_WIDTH={nozzle_dia * 1.1775}  LAYER_HEIGHT={nozzle_dia/2} START_FLOW={printer['gcode_macro _HOTEND'].max_flow|default(30)|int /3 } END_FLOW={printer['gcode_macro _HOTEND'].max_flow|default(30)|int +2}
        PRINT_END FILTER_TIME=0

    {% else %}
        {action_respond_info("Please call this macro using TYPE= \"flow\", \"pressure_advance\" or \"inconsistent_test\"")}
        {action_raise_error("not enough parameters to start a calibration!")}
    {% endif %}