[gcode_macro CHANGE_FILAMENT]
description: Do a PAUSE, park the toolhead over the purge bucket and unload the filament
variable_m600_state: False # used by RESUME to restore print_state
gcode:
    {% if printer.extruder.can_extrude %}
    SET_GCODE_VARIABLE MACRO=CHANGE_FILAMENT VARIABLE=m600_state VALUE=True
    SAVE_GCODE_STATE NAME=CHANGE_FILAMENT_state
      PAUSE
      PARK
      TIP_SHAPING
      UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=CHANGE_FILAMENT_state

    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
description: Basic unload of the filament (used with M600/CHANGE_FILAMENT)
gcode:
    {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}
      {% set DISTANCE = params.DISTANCE|default(105)|float %}
      {% if printer.extruder.can_extrude %}

      M400
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state

      M83
      G1 E-20 F3600
      G4 P3000
      G1 E-{DISTANCE} F3000
      SONG_CHANGE_FILAMENT
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
      {% else %}
        _RESPOND MSG="UNLOAD_FILAMENT failed : Heat extruder first !"
      {% endif %}
    {% else %}
      _RESPOND MSG="UNLOAD_FILAMENT disabled while printing !"
    {% endif %}

[gcode_macro LOAD_FILAMENT]
description: Basic load of the filament (used with M600/CHANGE_FILAMENT)
gcode:
    {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}
      {% set DISTANCE = params.DISTANCE| default(100)|float %}
      {% if printer.extruder.can_extrude %}
      M400
      SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
        M83
      G92 E0
        G1 E{DISTANCE} F200
        G1 E50 F150

      G92 E0
      SONG_CHANGE_FILAMENT
      RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state
      {% else %}
        _RESPOND MSG="LOAD_FILAMENT failed : Heat extruder first !"
      {% endif %}
    {% else %}
      _RESPOND MSG="LOAD_FILAMENT disabled while printing!"
    {% endif %}

[gcode_macro _FILAMENT_RUNOUT]
description: Behavior when filament runout is detected
gcode:
    SONG_CHANGE_FILAMENT
    PARK

[gcode_macro _FILAMENT_INSERT]
description: Behavior when filament motion detected inserted filament
gcode:

## inspired by EtteGit/EnragedRabittProject
[gcode_macro TIP_SHAPING]
description: Filament tip shaping sequence
gcode:
    {% set _fil = printer['gcode_macro _FILAMENT'].filament %}
    {% set _hotend = printer['gcode_macro _HOTEND'] %}
    {% set _retract_speed = (_fil.retract_speed|default(40)) * 60 %}
    {% set _moves = 5 %}
    {% set _initial_cooling_speed = _hotend.initial_cooling_speed|default(800) %}
    {% set _last_cooling_speed = _hotend.last_cooling_speed|default(2400) %}
    {% set _step_cooling_speed = (_last_cooling_speed - _initial_cooling_speed) / _moves %}
    
    {% if printer.extruder.can_extrude %}

    SAVE_GCODE_STATE NAME=TIP_SHAPING_state
    {% set saved_state = 1 if printer['filament_motion_sensor filament_runout_sensor'].enabled == True else 0 %}
    SET_FILAMENT_SENSOR SENSOR=filament_runout_sensor ENABLE=0 ; disable filament sensor
    SET_PRESSURE_ADVANCE ADVANCE=0                       ; Avoid unwanted behavior
      
      M83 ; relative extrusion
      G92 E0

      # Initial retraction for Dragon ST
      G1 E-15  F{_retract_speed}
      G1 E-{(_hotend.cooling_pos - 15) * 0.7}  F{_retract_speed / 10}
      G1 E-{(_hotend.cooling_pos - 15) * 0.2} F{_retract_speed / 20}
      G1 E-{(_hotend.cooling_pos - 15) * 0.1 + _hotend.cooling_length/2}   F{_retract_speed / 40}

      # Generate Cooling Moves
      {% for move in range(_moves ) %}
        G1 E{_hotend.cooling_length} F{ _initial_cooling_speed + (move - 1) * _step_cooling_speed }
        G1 E-{_hotend.cooling_length} F{ _initial_cooling_speed + (move - 0.5) * _step_cooling_speed }
      {% endfor %}

    SET_PRESSURE_ADVANCE ADVANCE={_fil.pressure_advance}   ; Restore pressure advance from filament settings
    SET_FILAMENT_SENSOR SENSOR=filament_runout_sensor ENABLE={saved_state} ; restore filament sensor
    RESTORE_GCODE_STATE NAME=TIP_SHAPING_state
    {% else %}
      _RESPOND MSG="TIP_SHAPING failed : Heat extruder first !"
    {% endif %}

[gcode_macro PRESSURE_NOZZLE]
gcode:
    {% set _fil = printer['gcode_macro _FILAMENT'].filament %}
    {% set _hotend = printer['gcode_macro _HOTEND'] %}
    {% set _max_flow = [_hotend.max_flow,_fil.max_flow|default(30)]|min|float %}
    {% set _retract_speed = _fil.retract_speed|default(40) %}

    {% if printer.extruder.can_extrude %}
    SAVE_GCODE_STATE NAME=PRESSURE_NOZZLE_state
      M221 S100
      M83
      G92 E0

      G1 E{_hotend.cooling_pos +2 } F{ _max_flow * 25 }
      G1 E-2 F{ _retract_speed * 60 }

    RESTORE_GCODE_STATE NAME=PRESSURE_NOZZLE_state
    {% else %}
      _RESPOND MSG="PRESSURE_NOZZLE failed : Heat extruder first !"
    {% endif %}

