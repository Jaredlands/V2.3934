# control part fan by db_filament (rewrite M106)
[gcode_macro _FILAMENT]
variable_fan_speed_override_enabled : True
variable_cur_fan: 0
gcode: 

[gcode_macro SET_PARTFAN]
gcode:
    {% set _fil=printer["gcode_macro _FILAMENT"] %}
    {% set max_fan_speed=_fil.filament.fan_speed|float / 100 %}

    #be sure to use min_power in your fan config if you use pwm scale
    {% set fan_config = printer.configfile.config.fan %}
    

    {% set request_fan_speed= params.S|default(255)|float / 255 %}
    {% if _fil.fan_speed_override_enabled %}
        SET_GCODE_VARIABLE MACRO=_FILAMENT VARIABLE=cur_fan VALUE={params.S}
        #be sure to use min_power in your fan config if you use pwm scale
        {% set fan_speed = request_fan_speed*max_fan_speed|float if fan_config.min_power is not defined else (0, (request_fan_speed*max_fan_speed - fan_config.min_power|float) / (1 - fan_config.min_power|float))|max %}
        M106 S{(fan_speed*255)|int}  
    {% else %}
        M106 S{params.S}
    {%endif%}

[gcode_macro SET_MAX_FAN_SPEED]
gcode:
    {% set max_fan_speed=params.S|default(0)|float %}
    {% set _fil=printer["gcode_macro _FILAMENT"] %}
    {% if max_fan_speed %}
        {% set _= _fil.filament.update({'fan_speed' : max_fan_speed|float}) %}
        SET_GCODE_VARIABLE MACRO=_FILAMENT VARIABLE=filament VALUE='{ _fil.filament|tojson|string }'
        {% if _fil.cur_fan > 0 %}
            SET_PARTFAN S={_fil.cur_fan}
        {% endif %}
    {% else %}
        _RESPOND MSG="{"Current max_fan_speed : %1.f mm^3/s" % _fil.filament.fan_speed|float}"
    {%endif%}